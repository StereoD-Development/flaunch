# Build descriptor for flaunch - built with fbuild. So meta.

name: flaunch

include:
  - sdpm_package
  - coverage


# -- Global Properties
props: null

# -- Package Management
build:
  type: basic

  #
  # What to include in our build - we include both
  # the windows and linux files to make it agnostic
  # for server-side deployments
  #
  files:
    - src
    - py
    - flaunch.bat
    - flaunch
    - fbuild.bat
    - fbuild
    - fupdate.bat
    - fupdate
    - selfupdate.py
    - version.txt
    - endpoints.txt

  #
  # We just define the launch.json from here
  #
  launch_json:
    executable:
      windows: "\"{path}/flaunch.bat\""
      unix: "\"{path}/flaunch\""
    env:
      PYTHONPATH: ["{path}"]


#
# Section where we can build arbitrary command sequences for
# calling whenever our hearts desire
#
raw:

  # run with: fbuild raw flaunch custom_print_example
  custom_print_example:
    help: "An example of a raw command"
    commands:
      - ":PRINT Example command that does some work with {package} in {source_dir}"

  deploy_mad_temp:
    help: |
      Use an sdpm version of a package and deploy to Madrid. This is currently
      only runnable via the Mr. Fusion box (10.1.61.28) on the internal network
      as it requires the a vfxbox mount. Note: Make sure you have a launch.json!
    
    epilog: |
      Example: fbuild raw -v flaunch deploy_mad_temp PyFlux 1.0.12 0030 --winlin

    arguments:
      - ["pkg",     "The name of the sdpm package" ]
      - ["version", "The sdpm version string", "\\d.\\d.\\d" ]
      - ["fix",     "The sdpm hotfix", "[0-9]{4}" ]
      - ["--ljson", "Optional launch.json file (required if no launch.json is in sdpm path)", .*(/|\\)launch\.json$ ]

    flags:
      - ["winlin", "Pass if this package can be deployed for both Win and Linux at the same time."]
      - ["windows", "Pass to deploy the Windows files (AMD64-Windows)"]

    commands:

      #
      # Prep work and attribute setting
      #
      - ":SET /mnt/isilon2/s3d/resources/sw/packages/{pkg}/{version}/{fix} package_base"
      - clause: "'{pkg}' == 'flux'"
        commands: ":SET Flux {pkg}"
      - ":SET {pkg}.{version}.{fix}.zip fpack"
      - ":SET /mnt/vfxbox/_FLUX/flaunch_packages/{pkg} vfxbox_repo"

      #
      # Windows vd. Linux differences
      #
      - ["--windows", ":SET AMD64-Windows arch", ":SET x86_64-Linux arch"]
      - ":CD {package_base}/{arch}"

      #
      # launch.json verification
      #
      - ["--ljson", ":COPY --force {ljson} ./"]
      - clause: "not file_exists('launch.json')"
        commands: ":FAIL launch.json not found! Required for Madrid deployment (--ljson)"

      #
      # Do the heavy lifting
      #
      - ":ZIP ../{fpack} -f ./ -e sdpm.rc -e sdpm.tar.gz -e sdpm.zip -n"
      - ":CD {package_base}"
      - ":COPY --force {fpack} {vfxbox_repo}/{platform}/"
      - ["--winlin", {
            "clause" : "'{platform}' == 'Windows'",
            "commands" : ":COPY --force {fpack} {vfxbox_repo}/Linux/" ,
            "else_commands" : ":COPY --force {fpack} {vfxbox_repo}/Windows/" 
        }]
      - ":DEL {fpack}" # Don't need after copy
