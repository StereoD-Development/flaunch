#
# Helios NLE build.yaml
#

name: Helios

repositories:
  - https://github.com/StereoD-Development/Helios
  - http://git/pipeline/Helios

include:
  - sdpm_package
  - cmake_util
  - flux_predeploy

# -- Global properties

props:

  # Cmake args are never fun - might be worth breaking this down with the build:type
  cmake_args:

    linux: '-DVFXLIBS_INSTALL="{vfxlibs_install}" -DQT_VERSION_STRING="{cmake_qt_version}" -DCMAKE_PREFIX_PATH="{cmake_qt_prefix_path}" -DCMAKE_INSTALL_PREFIX="{install_path}" -Dpybind11_DIR="{vfxlibs_install}/pybind11/share/cmake/pybind11"'

    windows: '-G "Visual Studio 2015 Win64" -DVFXLIBS_INSTALL="{vfxlibs_install}" -DQT_VERSION_STRING="{cmake_qt_version}" -DCMAKE_PREFIX_PATH="{cmake_qt_prefix_path}" -DCMAKE_INSTALL_PREFIX="{install_path}" -Dpybind11_DIR="{vfxlibs_install}/pybind11/share/cmake/pybind11"'

  #
  # This command changes based on the visual studio version / update - need some way to determine this
  #
  win_setup_command: "C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/vcvarsall.bat" amd64

# -- Build Management

build:
  type: basic

  env:
    linux:
      # -- We have these set for using a proper version of gcc
      - CC: /opt/rh/devtoolset-7/root/usr/bin/gcc
      - CXX: /opt/rh/devtoolset-7/root/usr/bin/g++

  pre_build:
    windows:
      - "{win_setup_command...}"

  commands:
    - cmake {cmake_args...} {source_dir}
    - windows:
        - cmake --build {source_dir} --config {cmake_build_config} --target {cmake_target} -j 16
      linux:
        - gmake -j16 install # ?? Can this be done with the command above?

    #
    # Make sure that the additional files are also in place
    #
    # post_build:
    #   - ['--full',
    #       {
    #         windows: ":ZIP -x {development_utils}/python_3.7_embeded.zip",
    #         unix: []
    #       }
    #     ]

